from typing import Optional

from aiogram_scenario.fsm.transitions.adapters import AbstractTransitionsAdapter
from aiogram_scenario import FSM, CommonHandlersRegistrar
from aiogram import Dispatcher

from .states_group import StatesGroup
from . import common_handlers


def _register_handlers(registrar: CommonHandlersRegistrar, data: Optional[dict] = None) -> None:
    registrar.register_states_handlers(StatesGroup.select(), data)
    ...  {{ '# here you can also register common handlers, errors handlers, etc.' }}


def initialize_fsm(fsm: FSM, transitions_adapter: AbstractTransitionsAdapter,
                   dispatcher: Dispatcher, data: Optional[dict] = None) -> None:
    fsm.set_initial_state(StatesGroup.{{ initial_state_name }})
    registrar = CommonHandlersRegistrar(dispatcher)
    _register_handlers(registrar, data)
    fsm.import_transitions(
        adapter=transitions_adapter,
        states=StatesGroup.select(),
        triggers=registrar.get_registered_handlers()
    )

